name: Build and Release Windows EXE

on:
  push:
    tags:
      - 'v*.*.*'   # e.g., v1.0.0, v1.2.3, etc.

permissions:
  contents: write

jobs:
  build:
    name: Build Windows EXE
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Build using Docker
        run: |
          docker pull tobix/pywine
          
          # Run the Docker container
          docker run -v .:/app -w /app tobix/pywine bash build.sh
          
          # Copy config to dist folder
          cp ./config.json ./dist/server/config.json
          
          # Create a temporary directory for the final structure
          mkdir -p ./MainsLeaderboard
          
          # Copy all contents from dist/server to MainsLeaderboard
          cp -r ./dist/server/* ./MainsLeaderboard/
          
          # Create the zip file from inside the MainsLeaderboard directory
          cd ./MainsLeaderboard && zip -r ../server.zip . && cd ..
          
          # Move to dist directory for consistency with upload path
          mv server.zip dist/server.zip
          
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: mains-leaderboard
          path: dist/server.zip
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload EXE to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/server.zip
          asset_name: MainsLeaderboard-${{ github.ref_name }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
